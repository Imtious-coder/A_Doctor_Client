{"ast":null,"code":"var _jsxFileName = \"D:\\\\doctors-portal\\\\client\\\\src\\\\components\\\\Apointment\\\\ApointmentForm\\\\ApointmentForm.js\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { useForm } from \"react-hook-form\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\nconst AppointmentForm = ({\n  modalIsOpen,\n  closeModal,\n  appointmentOn,\n  date\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    data.service = appointmentOn;\n    data.date = date;\n    data.created = new Date();\n    fetch('http://localhost:5000/addAppointment', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(success => {\n      if (success) {\n        closeModal(); // alert('Appointment created successfully.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center text-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, appointmentOn), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 59\n    }\n  }, \"ON \", date.toDateString())), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"p-5\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    name: \"name\",\n    placeholder: \"Your Name\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    name: \"phone\",\n    placeholder: \"Phone Number\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), errors.phone && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 42\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    name: \"email\",\n    placeholder: \"Email\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 42\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"gender\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    value: \"Not set\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"Select Gender\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Not set\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Other\")), errors.gender && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 47\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    name: \"age\",\n    placeholder: \"Your Age\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), errors.age && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 44\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    name: \"weight\",\n    placeholder: \"Weight\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }), errors.weight && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 47\n    }\n  }, \"This field is required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n};\n\nexport default AppointmentForm;","map":{"version":3,"sources":["D:/doctors-portal/client/src/components/Apointment/ApointmentForm/ApointmentForm.js"],"names":["React","Modal","useForm","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","AppointmentForm","modalIsOpen","closeModal","appointmentOn","date","register","handleSubmit","errors","onSubmit","data","service","created","Date","fetch","method","headers","body","JSON","stringify","then","res","json","success","toDateString","required","name","phone","email","gender","age","weight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst AppointmentForm = ({ modalIsOpen, closeModal, appointmentOn, date }) => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    \r\n    const onSubmit = data => {\r\n        data.service = appointmentOn;\r\n        data.date = date;\r\n        data.created = new Date();\r\n        \r\n        fetch('http://localhost:5000/addAppointment', {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => res.json())\r\n        .then(success => {\r\n            if(success){\r\n                closeModal();\r\n                // alert('Appointment created successfully.');\r\n            }\r\n        })\r\n\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <h2 className=\"text-center text-brand\">{appointmentOn}</h2>\r\n                <p className=\"text-secondary text-center\"><small>ON {date.toDateString()}</small></p>\r\n                <form className=\"p-5\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" ref={register({ required: true })} name=\"name\" placeholder=\"Your Name\" className=\"form-control\" />\r\n                        {errors.name && <span className=\"text-danger\">This field is required</span>}\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" ref={register({ required: true })} name=\"phone\" placeholder=\"Phone Number\" className=\"form-control\" />\r\n                        {errors.phone && <span className=\"text-danger\">This field is required</span>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" ref={register({ required: true })} name=\"email\" placeholder=\"Email\" className=\"form-control\" />\r\n                        {errors.email && <span className=\"text-danger\">This field is required</span>}\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-4\">\r\n\r\n                            <select className=\"form-control\" name=\"gender\" ref={register({ required: true })} >\r\n                                <option disabled={true} value=\"Not set\">Select Gender</option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Not set\">Other</option>\r\n                            </select>\r\n                            {errors.gender && <span className=\"text-danger\">This field is required</span>}\r\n\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input ref={register({ required: true })} className=\"form-control\" name=\"age\" placeholder=\"Your Age\" type=\"number\" />\r\n                            {errors.age && <span className=\"text-danger\">This field is required</span>}\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input ref={register({ required: true })} className=\"form-control\" name=\"weight\" placeholder=\"Weight\" type=\"number\" />\r\n                            {errors.weight && <span className=\"text-danger\">This field is required</span>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-brand\">Send</button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentForm;"]},"metadata":{},"sourceType":"module"}